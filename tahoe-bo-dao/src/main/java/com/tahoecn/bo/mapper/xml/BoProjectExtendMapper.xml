<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tahoecn.bo.mapper.BoProjectExtendMapper">

    <select id="selectByProjectId" resultType="com.tahoecn.bo.model.entity.BoProjectExtend">
        SELECT  id id,
        project_id projectId,
        city_id cityId,
        city_name cityName,
        gain_status_code gainStatusCode,
        gain_status_name gainStatusName,
        project_name projectName,
        case_name caseName,
        trade_mode_code tradeModeCode,
        trade_mode_name tradeModeName,
        tax_type_code taxTypeCode,
        tax_type_name taxTypeName,
        merge_table_type_code mergeTableTypeCode,
        merge_table_type_name mergeTableTypeName,
        dev_status_code devStatusCode,
        dev_status_name devStatusName,
        project_address projectAddress,
        version version,
        version_status versionStatus
        FROM bo_project_extend
        <where>
            and is_delete = 0 and is_disable = 0 and project_id = #{projectId}
            <if test="version != null and version !=''">
                and version = #{version}
            </if>
            <if test="isAdopt != null and isAdopt !=''">
                and version_status = 2
            </if>
            ORDER BY create_time DESC LIMIT 1
        </where>
    </select>

    <select id="selectByApproveId" resultType="com.tahoecn.bo.model.entity.BoProjectExtend">
        SELECT
        id,
        approve_id approveId,
        version_status versionStatus,
        approve_start_time approveStartTime,
        approve_end_time approveEndTime
        FROM
        bo_project_extend
        WHERE
        is_delete = 0
        AND is_disable = 0
        AND approve_id = #{approveId}
    </select>

    <select id="selectVersionInfoByProjectId" resultType="com.tahoecn.bo.model.dto.ProjectAndExtendInfoDto">
        SELECT project_id projectId,
        id versionId,
        version versionName,
        version_status versionStatus,
        IFNULL(approve_id,'') versionProcessId,
        IFNULL(DATE_FORMAT(approve_end_time,'%Y-%m-%d'),'') versionApprovaledDate
        FROM bo_project_extend WHERE project_id = #{projectId}
        AND is_delete = 0 AND is_disable = 0 AND version is not NULL GROUP BY create_time DESC;
    </select>

    <select id="selectVersionByProjectId" resultType="com.tahoecn.bo.model.dto.ProjectAndExtendInfoDto">
        SELECT mpi.sid projectId,bpe.id extendId,bpe.version,bpe.version,bpe.version_status versionStatus FROM mdm_project_info mpi
        INNER JOIN (select id,project_id,version,version_status,is_disable,is_delete from
        (SELECT id,project_id,version,version_status,is_disable,is_delete from bo_project_extend
        where is_delete = 0 AND is_disable = 0
        <if test="projectUpdateVersReqParam.version != null and projectUpdateVersReqParam.version != ''">
            AND version = #{projectUpdateVersReqParam.version}
        </if>
        order by create_time desc)
        as tab group by project_id) bpe ON mpi.sid = bpe.project_id
        WHERE mpi.sid = #{projectUpdateVersReqParam.projectId}
    </select>

    <select id="selectProjectByVersionId" resultType="com.tahoecn.bo.model.dto.ProjectInfoDto">
        SELECT
        mpi.sid projectId,
        bpe.id versionId,
        mpi.full_name projectName,
        bpe.case_name caseName,
        mpi.region_name companyAreaName,
        mpi.city_company_name companyCityName,
        bpe.city_id cityId,
        bpe.city_name cityName,
        bpe.project_address projectAddress,
        bpe.gain_status_code gainStatusCode,
        bpe.overview_pic_url picUrl,
        bpe.address_point point,
        bpe.version,
        bpe.version_status versionStatus
        FROM bo_project_extend bpe
        INNER JOIN mdm_project_info mpi ON bpe.project_id = mpi.sid
        WHERE bpe.id = #{versionId}
    </select>

    <select id="selectSubProjectByVersionId" resultType="com.tahoecn.bo.model.dto.ProjectInfoDto">
        SELECT
        mpi.sid projectId,
        submpi.sid subProjectId,
        bpe.id versionId,
        mpi.full_name projectName,
        submpi.name subProjectName,
        bpe.project_type projectType,
        bpe.gain_status_code gainStatusCode,
        bpe.trade_mode_code tradeModeCode,
        bpe.tax_type_code taxTypeCode,
        bpe.merge_table_type_code mergeTableTypeCode,
        bpe.overview_pic_url picUrl,
        bpe.version,
        bpe.version_status versionStatus
        FROM bo_project_extend bpe
        INNER JOIN mdm_project_info submpi ON bpe.project_id = submpi.sid
        INNER JOIN mdm_project_info mpi ON mpi.sid = submpi.parent_sid
        WHERE bpe.id = #{versionId}
    </select>

    <select id="selectSubPicurlsByProjectId" resultType="java.lang.String">
        SELECT IFNULL(bpe.overview_pic_url, '') url FROM mdm_project_info mpi
        INNER JOIN mdm_project_info submpi ON mpi.sid = submpi.parent_sid
        INNER JOIN (select id,project_id,overview_pic_url,is_disable,is_delete from
        (SELECT id,project_id,overview_pic_url,is_disable,is_delete from bo_project_extend where is_delete = 0 AND is_disable = 0 order by create_time desc)
        as tab group by project_id) bpe ON submpi.sid = bpe.project_id
        WHERE mpi.sid = #{projectId}
    </select>

    <select id="selectSubProIdsByVersionId" resultType="java.lang.String">
        SELECT sid FROM mdm_project_info WHERE parent_sid =
        (SELECT mpi.parent_sid FROM bo_project_extend bpe INNER JOIN mdm_project_info mpi ON bpe.project_id = mpi.sid
        WHERE bpe.id = #{versionId})
    </select>

	<update id="updateForClearApproveData">
		update bo_project_extend
	 	set approve_id = null,approve_start_time = null,approve_end_time = null,version_status = #{versionStatus},
	  	update_time = #{updateTime}
	  	where id = #{id}
	 </update>
</mapper>
